from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.types import FSInputFile

from xcoinbot.bot.keyboards.admin_keyboard import AdminKeyboards
from xcoinbot.bot.models import Admin
from xcoinbot.bot.services import Services


router = Router(name=__name__)


@router.message(Command("admin"))
async def admin_panel(message: types.Message, admin: Admin):
	"""–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
	await message.answer(
		"üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!",
		reply_markup=AdminKeyboards.main_menu(admin.level)
	)


@router.callback_query(F.data == "admin_main")
async def admin_main(callback: types.CallbackQuery, services: Services):
	"""–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
	admin = await services.admin.get_admin(callback.from_user.id)

	await callback.message.edit_text(
		"üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!",
		reply_markup=AdminKeyboards.main_menu(admin.level)
	)
	await callback.answer()


@router.callback_query(F.data == "admin_logs")
async def get_logs(callback: types.CallbackQuery, services: Services):
	"""–ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤"""
	log_files = await services.admin.get_logs()

	if log_files:
		await callback.message.answer(
			text="üìú –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –ª–æ–≥–∏ –±–æ—Ç–∞",
			reply_markup=AdminKeyboards.logs_buttons(log_files)
		)
	else:
		await callback.answer("‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)

	await callback.answer()


@router.callback_query(F.data.startswith("logs-"))
async def send_log(callback: types.CallbackQuery):
	log_file = callback.data.split('-')[1]
	await callback.bot.send_document(
		chat_id=callback.from_user.id,
		document=FSInputFile('logs/' + log_file + '.log'),
		caption=f"‚úî –§–∞–π–ª –ª–æ–≥–æ–≤ –∑–∞ <b>{log_file}</b>"
	)
	await callback.answer()


@router.callback_query(F.data == "admin_backup")
async def create_backup(callback: types.CallbackQuery, services: Services):
	"""–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞"""
	await callback.answer("‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞...")

	backup_file = await services.admin.create_backup()
	if backup_file:
		await callback.bot.send_document(
			chat_id=callback.from_user.id,
			document=backup_file,
			caption="üíæ –ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
		)
	else:
		await callback.answer("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞", show_alert=True)

	await callback.answer()
